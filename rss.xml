<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>Alex Girard Feed</title>
    <link>http://alexgirard.com</link>
    <description>Alex Girard</description>
    <pubDate>2009-02-27T21:35:00+01:00</pubDate>
    <lastBuildDate>2009-02-27T21:35:00+01:00</lastBuildDate>
    <webMaster>alx.girard@gmail.com</webMaster>
	
	
 	<item>
   		<title>Deploying a Merb app with Capistrano, monit and nginx</title>
   		<link>http://alexgirard.com/2009/02/27/deploy-merb-nginx-capistrano.html</link>
   		<guid>http://alexgirard.com/2009/02/27/deploy-merb-nginx-capistrano</guid>
   		<description>&lt;h1&gt;Deploying a Merb app with Capistrano, monit and nginx&lt;/h1&gt;
&lt;p&gt;For the second time this morning, we&amp;#8217;ve deployed a merb app on a server, and even if it&amp;#8217;s quite simple once you&amp;#8217;ve got the logic in the head, it&amp;#8217;s surely necessary to have this little note for future deploys.&lt;br /&gt;
I hope it&amp;#8217;ll help other merb dev to fill the documentation hole about this process, feel free to complete or debug it in the comments. More documentation about this process is available &lt;a href="http://book.merbist.com/deployment/nginx"&gt;on the Merb Open Source Book&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/merb_deploy.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s suppose you all know how to use &lt;a href="http://www.capify.org/"&gt;Capistrano&lt;/a&gt;, and that your project is already deployed with it, you now want &lt;a href="http://wiki.codemongers.com/"&gt;Nginx&lt;/a&gt; to serve request to your merb app.&lt;/p&gt;
&lt;h2&gt;Nginx&lt;/h2&gt;
&lt;p&gt;First, you need to configure nginx to act as a proxy to send requests to your merb servers. In &lt;em&gt;/etc/nginx/conf.d/merb.conf&lt;/em&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
upstream merb_app {
  server 127.0.0.1:4000;
  server 127.0.0.1:4001;
}
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;And in &lt;em&gt;/etc/nginx/sites-enabled/domain.conf&lt;/em&gt;, the most important line is &amp;#8220;&lt;strong&gt;proxy_pass http://merb_app;&lt;/strong&gt;&amp;#8221;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
server {
    listen 80;
    server_name domain.com;

    root /home/deploy/merb_app/current/public;

    access_log /home/deploy/merb_app/shared/log/access.log;
    error_log /home/deploy/merb_app/shared/log/error.log;

    location / {

      proxy_set_header  X-Real-IP       $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host            $http_host;

      proxy_redirect false;
      proxy_max_temp_file_size 0;

      if (-f $request_filename) {
        break;
      }

      if (-f $request_filename.html) {
        rewrite (.*) $1.html break;
      }

      if (!-f $request_filename) {
        proxy_pass http://merb_app;
        break;
      }

    } # location

} # server

&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;We surely can merge this 2 files in the same configuration file, but it&amp;#8217;s just working this way today, let&amp;#8217;s change it later.&lt;/p&gt;
&lt;h2&gt;Monit and monit_merb_mpc&lt;/h2&gt;
&lt;p&gt;Thats the tricky part, you need to start a master merb that&amp;#8217;ll monitor workers on your app ports.&lt;/p&gt;
&lt;p&gt;First, the &lt;em&gt;/etc/monit.d/domain.monit&lt;/em&gt; file, that&amp;#8217;ll be call to start/stop/restart all these processes:&lt;/p&gt;
&lt;script src="http://gist.github.com/47691.js"&gt;&lt;/script&gt;&lt;p&gt;And the monit_merb_mpc script from &amp;#8220;Engine Yard&amp;#8221;:, the &lt;a href="http://pastie.org/333352"&gt;original&lt;/a&gt; was too buggy for our server, so here is a working version:&lt;/p&gt;
&lt;script src="http://gist.github.com/46061.js"&gt;&lt;/script&gt;&lt;p&gt;It&amp;#8217;s surely still buggy, and all this long configuration surely will be replaced by a lighter god script that&amp;#8217;ll at the same time generate and monitor the master/workers processes.&lt;/p&gt;
&lt;h2&gt;Restart with Capistrano&lt;/h2&gt;
&lt;p&gt;The easiest part of all, you just need to tell your monit to start/stop/restart the group defined in the monit preferences:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
namespace :deploy do
  # Redefine the application server controls to use monit.
  %W(restart start stop).each do |event|
    desc "#{event} using Monit"
    task event, :except =&amp;gt; { :no_release =&amp;gt; true } do
      sudo "/usr/sbin/monit -c /etc/monit/monitrc -g #{application} #{event} all"
    end
  end
end
&lt;/code&gt;
&lt;/pre&gt;</description>
   		<pubDate>2009-02-27T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Merb Slice and Resources, wrong number of arguments</title>
   		<link>http://alexgirard.com/2009/02/23/merb-slice-resource-wrong-number-argument.html</link>
   		<guid>http://alexgirard.com/2009/02/23/merb-slice-resource-wrong-number-argument</guid>
   		<description>&lt;h1&gt;Merb Slice and Resources, wrong number of arguments&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;
merb : worker (port 4000) ~ Started request handling: Mon Feb 23 01:08:49 +0100 2009
merb : worker (port 4000) ~ Routed to: {"format"=&amp;gt;nil, "submit"=&amp;gt;"Create Page", "action"=&amp;gt;"create", "controller"=&amp;gt;"webbastic/pages", "page"=&amp;gt;{"name"=&amp;gt;"home", "site_id"=&amp;gt;"1"}}
merb : worker (port 4000) ~ Params: {"format"=&amp;gt;nil, "submit"=&amp;gt;"Create Page", "action"=&amp;gt;"create", "controller"=&amp;gt;"webbastic/pages", "page"=&amp;gt;{"name"=&amp;gt;"home", "site_id"=&amp;gt;"1"}}
merb : worker (port 4000) ~ wrong number of arguments (0 for 1) - (ArgumentError)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When using resources in a Merb Slice, you can get this kind of error.&lt;br /&gt;
I still don&amp;#8217;t know the core of the problem, but I&amp;#8217;ve found how to solve it.&lt;/p&gt;
&lt;p&gt;It begins with the signature of the resource contoller method:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  # POST /pages
  def create(page)
    @page = Webbastic::Page.new(page)
	.....
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Someway, the &lt;strong&gt;page&lt;/strong&gt; object doesn&amp;#8217;t pass through &amp;#8211; number of argument equals 0 &amp;#8211; but you can still access to your parameters with &lt;strong&gt;params&lt;/strong&gt; object, modifying the method this way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
  # POST /pages
  def create
    @page = Webbastic::Page.new(params[:page])
	.....
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;#8217;ve post a ticket on Merb dashboard, so this might have another official solution soon: &lt;a href="http://merb.lighthouseapp.com/projects/7433-merb/tickets/1225-merb-slice-and-resources-wrong-number-of-arguments"&gt;ticket #1225&lt;/a&gt;&lt;/p&gt;</description>
   		<pubDate>2009-02-23T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Youri au clavier, premieres touches</title>
   		<link>http://alexgirard.com/2009/02/14/youri-clavier.html</link>
   		<guid>http://alexgirard.com/2009/02/14/youri-clavier</guid>
   		<description>&lt;p&gt;Comme un premier site web dans les années 90, une première vidéo-conférence au début des années 2000, voici les premières lettres numériques de Youri à 6 mois en 2009:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
	xw
	!?K N BNNNNNNNNN
	TTyoituryeYTRRGH?
&lt;/code&gt;
&lt;/pre&gt;</description>
   		<pubDate>2009-02-14T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Deploy a Merb Slice with Rake and Capistrano</title>
   		<link>http://alexgirard.com/2009/02/11/deploy-slice-capistrano.html</link>
   		<guid>http://alexgirard.com/2009/02/11/deploy-slice-capistrano</guid>
   		<description>&lt;h1&gt;Deploy a Merb Slice with Rake and Capistrano&lt;/h1&gt;
&lt;p&gt;On the Slice side, you just need to install the code locally to retrieve the assets, and push the code on your Git repository to retrieve it on your production server.&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
sudo rake install
git push
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;On the Merb App side, you&amp;#8217;ll need to tell it to update the Slice gemon the server first.&lt;br /&gt;
For this, I&amp;#8217;ve made a special task in &lt;strong&gt;config/deploy.rb&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
namespace :gems do

  desc "Update and install media_rocket gem"
  task :media_rocket do
    run "cd #{gems_path}/media_rocket/; git pull"
    sudo "echo" # Allows to run next command as root
    run "cd #{gems_path}/media_rocket/ &amp;amp;&amp;amp; sudo rake install"
  end

end	
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Then you&amp;#8217;ll need to copy the assets from your Slice to your current application, add the changes to Git and deploy it:&lt;/p&gt;
&lt;pre&gt;
&lt;code&gt;
rake slices:media_rocket:copy_assets
git commit -a -m "add last asset from media_rocket"
git push
cap gems:media_rocket
cap deploy
&lt;/code&gt;
&lt;/pre&gt;</description>
   		<pubDate>2009-02-11T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>10 invites to Spotify.com</title>
   		<link>http://alexgirard.com/2009/02/03/invites-to-spotify.html</link>
   		<guid>http://alexgirard.com/2009/02/03/invites-to-spotify</guid>
   		<description>&lt;h1&gt;10 invites to Spotify.com&lt;/h1&gt;
&lt;p&gt;For those interested, please leave a comment to get an invite on &lt;a href="http://spotify.com"&gt;Spotify.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s nothing particular, just a simple iTunes, with a monthly subscription for those who wants to pay, an old music-business concept that some guys have finally put in place.&lt;/p&gt;
&lt;p&gt;Thanks to years of music industry battle, we&amp;#8217;ve got this old technology quietly moving in, and it worries me a bit that it&amp;#8217;ll stll be controlled more by business-spirit than creating a sharing community. On their blog, they&amp;#8217;ve already announced they plan to block some tracks depending on the geographic region, nice way to crash.&lt;/p&gt;
&lt;p&gt;Test it, it&amp;#8217;s simple, you might like it, but it&amp;#8217;s nothing compared to something like &lt;a href="http://last.fm"&gt;last.fm&lt;/a&gt;.&lt;br /&gt;
If only there was a subscription (and a better music player) on last.fm, they&amp;#8217;d win them all.&lt;/p&gt;</description>
   		<pubDate>2009-02-03T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Merb et rangement de vos classes en sous-répertoire</title>
   		<link>http://alexgirard.com/2009/02/03/sous-repertoire-merb.html</link>
   		<guid>http://alexgirard.com/2009/02/03/sous-repertoire-merb</guid>
   		<description>&lt;h1&gt;Merb et rangement de vos classes en sous-répertoire&lt;/h1&gt;
&lt;p&gt;Petit travail d&amp;#8217;un soir: organiser les classes de notre application Merb dans des sous-répertoire.&lt;/p&gt;
&lt;h2&gt;Problématique&lt;/h2&gt;
&lt;p&gt;Par défaut, Merb construit ce type d&amp;#8217;arborescence:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
app
|__ controllers
	|__ ...
	|__ rockets.rb
|__ models
	|__ ...
	|__ rocket.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Et pour pas vous embêtez, vous entassez naturellement vos classes jusqu&amp;#8217;à trop plein.&lt;br /&gt;
Maintenant, vous voulez ranger vos contrôleurs et modèles de manière plus hiérarchiques:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
app
|__ controllers
	|__ ...
	|__ resource
		|__ ...
		|__ rockets.rb
|__ models
	|__ ...
	|__ resource
		|__ ...
		|__ rocket.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;Pour faire ceci, il vous faut d&amp;#8217;abord modifier le fichier &lt;strong&gt;config/router.rb&lt;/strong&gt;, par exemple pour appeler le contrôleur de la ressource &lt;strong&gt;rocket&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Merb::Router.prepare do |r|
  
  r.resources :resource_rockets, :controller =&amp;gt; "resource/rockets"

end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vous devez déclarer le module du contrôleur dans &lt;strong&gt;app/controllers/resource/rockets.rb&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
module Resource
  class Rockets &amp;lt; Application
	...
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pour cette manipulation, il n&amp;#8217;y a aucune modifications à apporter au modèle, il vous suffit de le mettre dans son sous-répertoire et il devrait être reconnu.&lt;/p&gt;</description>
   		<pubDate>2009-02-03T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Ruby and Windows, stupid trick to delete a file</title>
   		<link>http://alexgirard.com/2009/01/27/ruby-wundows-unlink.html</link>
   		<guid>http://alexgirard.com/2009/01/27/ruby-wundows-unlink</guid>
   		<description>&lt;p&gt;Sometimes, you&amp;#8217;ve to be strong enough to delete a &amp;#8220;&lt;em&gt;permission denied&lt;/em&gt;&amp;#8221; file under windows with ruby:&lt;/p&gt;
&lt;script src="http://gist.github.com/53396.js"&gt;&lt;/script&gt;&lt;p&gt;It doesn&amp;#8217;t take too long, but that&amp;#8217;s the kind of stupid trick you can avoid if you choose another platform to make your code.&lt;/p&gt;</description>
   		<pubDate>2009-01-27T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Politimap, les zones chaudes de l'Assemblée Nationale</title>
   		<link>http://alexgirard.com/2009/01/07/politimap-premiere.html</link>
   		<guid>http://alexgirard.com/2009/01/07/politimap-premiere</guid>
   		<description>&lt;p&gt;Après quelques surprises lors du passage de Jérémie Zimmermann à &lt;a href="http://www.cinemas-utopia.org/toulouse/"&gt;Utopia Toulouse&lt;/a&gt; pour présenter le travail de &lt;a href="http://laquadrature.net"&gt;La Quadrature du Net&lt;/a&gt;, et après m&amp;#8217;être rapidement perdu dans une tentative de lecture des texte des sessions de l&amp;#8217;Assemblée Nationale, je me suis dit qu&amp;#8217;il serait plus marrant de visualiser l&amp;#8217;activité de ces sessions sous forme de &lt;a href="http://images.google.com/images?q=heatmap"&gt;heatmap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sachant que tous les textes, et le fiches de chaque député sont librement accessible sur le site de l&amp;#8217;Assemblée, il ne me manquait plus que quelques lignes pour analyser le nombre de prise de parole dans chaque séance. Ainsi, durant la première séance du 8 décembre 2008, évoquant la communication audiovisuelle et le nouveau service public de la télévision, voici le nombre de prise de parole:&lt;/p&gt;
&lt;p&gt;58, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/2045.asp'&gt;No&amp;#235;l Mam&amp;#232;re&lt;/a&gt; &amp;#8211; Place: 596&lt;br /&gt;
45, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/543.asp'&gt;Patrick Bloche&lt;/a&gt; &amp;#8211; Place: 453&lt;br /&gt;
34, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/2603.asp'&gt;Marcel Rogemont&lt;/a&gt; &amp;#8211; Place: 479&lt;br /&gt;
30, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/267768.asp'&gt;Patrick Roy&lt;/a&gt; &amp;#8211; Place: 550&lt;br /&gt;
24, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/333224.asp'&gt;Benoist Apparu&lt;/a&gt; &amp;#8211; Place: 138&lt;br /&gt;
23, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/2099.asp'&gt;Patrice Martin-Lalande&lt;/a&gt; &amp;#8211; Place: 125&lt;br /&gt;
23, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/917.asp'&gt;Jean-Fran&amp;#231;ois Cop&amp;#233;&lt;/a&gt; &amp;#8211; Place: 99&lt;br /&gt;
22, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/653.asp'&gt;Patrick Braouezec&lt;/a&gt; &amp;#8211; Place: 585&lt;br /&gt;
21, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/346886.asp'&gt;Fr&amp;#233;d&amp;#233;ric Lefebvre&lt;/a&gt; &amp;#8211; Place: 358&lt;br /&gt;
20, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/1630.asp'&gt;Michel Herbillon&lt;/a&gt; &amp;#8211; Place: 259&lt;br /&gt;
15, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/1761.asp'&gt;Christian Kert&lt;/a&gt; &amp;#8211; Place: 343&lt;br /&gt;
12, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/335319.asp'&gt;Sandrine Mazetier&lt;/a&gt; &amp;#8211; Place: 429&lt;br /&gt;
7, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/267266.asp'&gt;Yves Censi&lt;/a&gt; &amp;#8211; Place: 79&lt;br /&gt;
6, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/267087.asp'&gt;Jean Dionis du S&amp;#233;jour&lt;/a&gt; &amp;#8211; Place: 397&lt;br /&gt;
5, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/267429.asp'&gt;Dino Cinieri&lt;/a&gt; &amp;#8211; Place: 196&lt;br /&gt;
4, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/1058.asp'&gt;Richard Dell&amp;#39;Agnola&lt;/a&gt; &amp;#8211; Place: 357&lt;br /&gt;
4, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/267719.asp'&gt;Richard Malli&amp;#233;&lt;/a&gt; &amp;#8211; Place: 76&lt;br /&gt;
3, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/1886.asp'&gt;Bruno Le Roux&lt;/a&gt; &amp;#8211; Place: 421&lt;br /&gt;
2, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/2319.asp'&gt;Fran&amp;#231;oise de Panafieu&lt;/a&gt; &amp;#8211; Place: 177&lt;br /&gt;
2, &lt;a href='http://www.assemblee-nationale.fr/13/tribun/fiches_id/335054.asp'&gt;Marietta Karamanli&lt;/a&gt; &amp;#8211; Place: 559&lt;/p&gt;
&lt;p&gt;Avec ces données, il ne me manquait plus qu&amp;#8217;a situé chacun des sièges. Heureusement, le &lt;a href="http://www.assemblee-nationale.fr/seance/hemicycle.asp"&gt;plan de l&amp;#8217;hémicycle&lt;/a&gt; est aussi disponible en ligne, et en ajoutant un peu d&amp;#8217;interaction grâce à &lt;a href="http://shoooes.net/"&gt;Shoes&lt;/a&gt;, j&amp;#8217;ai rapidement créé un fichier de coordonnées de tous les sièges. (&lt;em&gt;En passant, j&amp;#8217;aimerai maintenant avoir plus d&amp;#8217;information sur l&amp;#8217;histoire de l&amp;#8217;Assemblée, il manque des numéros de sièges, la curiosité me poussera sûrement à répondre à ces manques prochainement.&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;Voici l&amp;#8217;application qui m&amp;#8217;a servie à situer chaque siège:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/seatmap.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Et enfin, avec l&amp;#8217;aide du code de &lt;a href="http://blog.corunet.com/english/the-definitive-heatmap"&gt;clickmaps&lt;/a&gt;, idéalement disponible en ruby, j&amp;#8217;ai put le modifier un petit peu pour analyser cette séance:&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/20090090.jpg" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;Ce n&amp;#8217;est qu&amp;#8217;un début, avec du code encore tout poussiéreux, et des idées d&amp;#8217;analyses qui peuvent être assez marrante, ou plus sérieusement poussées pour permettre une autre vision de la scène politique encore assez obscure à l&amp;#8217;Assemblée.&lt;/p&gt;
&lt;p&gt;Vous pouvez télécharger et suivre le développement de cet outils sur &lt;a href="http://github.com/alx/politimap/"&gt;github.com/alx/politimap/&lt;/a&gt;&lt;/p&gt;</description>
   		<pubDate>2009-01-07T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Git Community Book en Français!</title>
   		<link>http://alexgirard.com/2008/12/28/gitbook-en-francais.html</link>
   		<guid>http://alexgirard.com/2008/12/28/gitbook-en-francais</guid>
   		<description>&lt;p&gt;Une nouvelle traduction en cours de correction est maintenant disponible pour tous ceux voulant en connaître plus sur Git: le &lt;a href="http://book.git-scm.com/"&gt;Git Community Book&lt;/a&gt; est disponible sur &lt;a href="http://github.com/schacon/gitbook/"&gt;GitHub&lt;/a&gt;, et après en avoir appris énormément durant la traduction de la centaine de pages de cette ouvrage en cours de réalisation, je vous ai généré la version française actuelle:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://alexgirard.com/git-book/"&gt;&lt;img src="/images/gitbook.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vous y trouverez le &lt;a href="http://alexgirard.com/git-book/book_fr.pdf"&gt;&lt;span class="caps"&gt;PDF&lt;/span&gt;&lt;/a&gt; et aussi pleins d&amp;#8217;erreurs à corriger. Je vous invite à m&amp;#8217;envoyer un mail à &lt;a href="mailto:alx.girard@gmail.com"&gt;alx.girard@gmail.com&lt;/a&gt; avec vos corrections, suggestions, et commentaires; ou à participer au projet en le &lt;a href="http://github.com/alx/gitbook/tree/french"&gt;forkant sur github&lt;/a&gt; et en travaillant dans la branche &lt;em&gt;french&lt;/em&gt; avant de m&amp;#8217;envoyer vos &lt;em&gt;pull-request&lt;/em&gt;.&lt;/p&gt;</description>
   		<pubDate>2008-12-28T00:00:00+01:00</pubDate>
 	</item>
 	
 	<item>
   		<title>Using Git submodules to publish jekyll blog on many hosts</title>
   		<link>http://alexgirard.com/2008/12/27/git-public-websites.html</link>
   		<guid>http://alexgirard.com/2008/12/27/git-public-websites</guid>
   		<description>&lt;p&gt;Since GitHub has released the Pages features, it has become a bit of a chore to manage publications on various websites. For example, if you use Jekyll on an external site and on Github Pages, you&amp;#8217;ll need to change the links inside the rss feeds to take care the 2 domains.&lt;/p&gt;
&lt;p&gt;To manage the publication of my 2 websites, which get the same content generated by Jekyll, I&amp;#8217;ve choose to only use git submodules and a rake task to publish new content. It might not be the best solution, I recognize it&amp;#8217;s a bit messy, but I least I just have to use this command to publish all content now: &lt;em&gt;rake publish&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/images/publish.png" alt="" /&gt;&lt;/p&gt;
&lt;p&gt;The rake task and the organisation of the project is available on GitHub: &lt;a href="http://github.com/alx/hub/tree/master"&gt;Hub &amp;#8211; A central place for publications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inside, you&amp;#8217;ll just find git submodules in use on my publication ring: &lt;strong&gt;site-content&lt;/strong&gt; linking to my content, &lt;strong&gt;alexgirard.com&lt;/strong&gt; and &lt;strong&gt;alx.github.com&lt;/strong&gt; linking to 2 branches of my GitHub Page project (one branch for GitHub, one branch for &lt;a href="http://alexgirard.com"&gt;alexgirard.com&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Inside the rakefile, you&amp;#8217;ll find the different processes in use to publish on each website. It uses the &lt;a href="http://github.com/schacon/ruby-git/tree/master"&gt;git gem from Scott Chacon&lt;/a&gt; and was a good exercice after translating the &lt;a href="http://github.com/alx/gitbook/tree/french"&gt;Git Book in french&lt;/a&gt; for a week.&lt;/p&gt;
&lt;p&gt;You can easily imagine how to modify it, to simulate the new &lt;a href="http://github.com/blog/277-pages-generator"&gt;page generator&lt;/a&gt; for each of your project, or host the last version of the newly versions of various open book: &lt;a href="http://book.merbist.com/"&gt;Merb Book&lt;/a&gt;, &lt;a href="http://book.git-scm.com/"&gt;Git Community Book&lt;/a&gt; &amp;#8230;&lt;/p&gt;</description>
   		<pubDate>2008-12-27T00:00:00+01:00</pubDate>
 	</item>
 	
  </channel>
</rss>
